name: CI

on:
  push:
    branches:
      - "main"

env:
  REGISTRY: "ghcr.io"
  CMS_NAME: "${{ github.repository }}.cms"
  WEB_NAME: "${{ github.repository }}.web"
  PRERELASE: true

concurrency: production

jobs:
  tag:
    name: Version tag
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tag update
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: ${{ env.PRERELASE }}

      - name: echo tag
        run: |
          echo "Running build for ${{ steps.tagDR.outputs.tag }} -> ${{ steps.tagDR.outputs.new_tag }} "
    
  

  cms:
    name: Build CMS
    runs-on: ubuntu-latest
    needs: tag

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

          
# BUILD CMS IMAGE
      - name: CMS - Metadata
        id: metaCMS
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.CMS_NAME }}
          tags: |
            type=semver,pattern={{version}}
    
      - name: CMS - Build and push
        id: pushCMS
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:database"
          push: true
          tags: ${{ steps.metaCMS.outputs.tags }}
          labels: ${{ steps.metaCMS.outputs.labels }}, 
          
      - name: CMS - Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.CMS_NAME}}
          subject-digest: ${{ steps.pushCMS.outputs.digest }}
          push-to-registry: true


  web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: tag

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
# BUILD WEB IMAGE
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: WEB - Metadata
        id: metaWEB
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.WEB_NAME }}
          tags: |
            type=semver,pattern={{version}}
    
      - name: WEB - Build and push
        id: pushWEB
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:web"
          push: true
          tags: ${{ steps.metaWEB.outputs.tags }}
          labels: ${{ steps.metaWEB.outputs.labels }}, 
          
      - name: WEB - Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.pushWEB.outputs.digest }}
          push-to-registry: true
